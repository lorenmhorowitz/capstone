// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Page Not Found  renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PageNotFound />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="loginSquare"
      >
        <div
          id="title"
        >
          <span
            id="Corner"
          >
            Corner
          </span>
          <span
            id="Stone"
          >
            Stone
          </span>
        </div>
        <div
          id="pageNotFound"
        >
          <WithStyles(Typography)
            style={
              Object {
                "color": "white",
              }
            }
            variant="h3"
          >
            Page Not Found
          </WithStyles(Typography)>
        </div>
        <div
          className="pageNotFound"
        >
          <p />
          <WithStyles(Button)
            id="returnToLogin"
            onClick={[Function]}
          >
            Return to Login Page
          </WithStyles(Button)>
        </div>
      </div>,
      "className": "Img",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            id="title"
          >
            <span
              id="Corner"
            >
              Corner
            </span>
            <span
              id="Stone"
            >
              Stone
            </span>
          </div>,
          <div
            id="pageNotFound"
          >
            <WithStyles(Typography)
              style={
                Object {
                  "color": "white",
                }
              }
              variant="h3"
            >
              Page Not Found
            </WithStyles(Typography)>
          </div>,
          <div
            className="pageNotFound"
          >
            <p />
            <WithStyles(Button)
              id="returnToLogin"
              onClick={[Function]}
            >
              Return to Login Page
            </WithStyles(Button)>
          </div>,
        ],
        "className": "loginSquare",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                id="Corner"
              >
                Corner
              </span>,
              <span
                id="Stone"
              >
                Stone
              </span>,
            ],
            "id": "title",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Corner",
                "id": "Corner",
              },
              "ref": null,
              "rendered": "Corner",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Stone",
                "id": "Stone",
              },
              "ref": null,
              "rendered": "Stone",
              "type": "span",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <WithStyles(Typography)
              style={
                Object {
                  "color": "white",
                }
              }
              variant="h3"
            >
              Page Not Found
            </WithStyles(Typography)>,
            "id": "pageNotFound",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Page Not Found",
              "style": Object {
                "color": "white",
              },
              "variant": "h3",
            },
            "ref": null,
            "rendered": "Page Not Found",
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p />,
              <WithStyles(Button)
                id="returnToLogin"
                onClick={[Function]}
              >
                Return to Login Page
              </WithStyles(Button)>,
            ],
            "className": "pageNotFound",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Return to Login Page",
                "id": "returnToLogin",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Return to Login Page",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="loginSquare"
        >
          <div
            id="title"
          >
            <span
              id="Corner"
            >
              Corner
            </span>
            <span
              id="Stone"
            >
              Stone
            </span>
          </div>
          <div
            id="pageNotFound"
          >
            <WithStyles(Typography)
              style={
                Object {
                  "color": "white",
                }
              }
              variant="h3"
            >
              Page Not Found
            </WithStyles(Typography)>
          </div>
          <div
            className="pageNotFound"
          >
            <p />
            <WithStyles(Button)
              id="returnToLogin"
              onClick={[Function]}
            >
              Return to Login Page
            </WithStyles(Button)>
          </div>
        </div>,
        "className": "Img",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              id="title"
            >
              <span
                id="Corner"
              >
                Corner
              </span>
              <span
                id="Stone"
              >
                Stone
              </span>
            </div>,
            <div
              id="pageNotFound"
            >
              <WithStyles(Typography)
                style={
                  Object {
                    "color": "white",
                  }
                }
                variant="h3"
              >
                Page Not Found
              </WithStyles(Typography)>
            </div>,
            <div
              className="pageNotFound"
            >
              <p />
              <WithStyles(Button)
                id="returnToLogin"
                onClick={[Function]}
              >
                Return to Login Page
              </WithStyles(Button)>
            </div>,
          ],
          "className": "loginSquare",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span
                  id="Corner"
                >
                  Corner
                </span>,
                <span
                  id="Stone"
                >
                  Stone
                </span>,
              ],
              "id": "title",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Corner",
                  "id": "Corner",
                },
                "ref": null,
                "rendered": "Corner",
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Stone",
                  "id": "Stone",
                },
                "ref": null,
                "rendered": "Stone",
                "type": "span",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <WithStyles(Typography)
                style={
                  Object {
                    "color": "white",
                  }
                }
                variant="h3"
              >
                Page Not Found
              </WithStyles(Typography)>,
              "id": "pageNotFound",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Page Not Found",
                "style": Object {
                  "color": "white",
                },
                "variant": "h3",
              },
              "ref": null,
              "rendered": "Page Not Found",
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p />,
                <WithStyles(Button)
                  id="returnToLogin"
                  onClick={[Function]}
                >
                  Return to Login Page
                </WithStyles(Button)>,
              ],
              "className": "pageNotFound",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Return to Login Page",
                  "id": "returnToLogin",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Return to Login Page",
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
